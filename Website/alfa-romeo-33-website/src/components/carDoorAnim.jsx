/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'
import { useEffect } from 'react'
import * as THREE from 'three'

export default function CarAnimModel(props) {
  const group = useRef()
  const { nodes, animations } = useGLTF('./carModel/Door_r3f_02.gltf')
  const { actions } = useAnimations(animations, group)
  console.log(actions)

  let doorClosed = true

  function openDoor() {
    if (doorClosed) {
      actions.Door_Left_Close.fadeOut(0.5)
      actions.Door_Right_Close.fadeOut(0.5)
      actions.Door_Left_Open.reset().setLoop(THREE.LoopOnce).fadeIn(0.5).play()
      actions.Door_Right_Open.reset().setLoop(THREE.LoopOnce).fadeIn(0.5).play()
      actions.Door_Left_Open.clampWhenFinished = true
      actions.Door_Right_Open.clampWhenFinished = true
      doorClosed = false
      console.log(doorClosed)
    } else {
      actions.Door_Left_Open.fadeOut(0.5)
      actions.Door_Right_Open.fadeOut(0.5)
      // actions.Door_Left_Close.fadeIn(0.1).play()
      // actions.Door_Right_Close.fadeIn(0.1).play()
      actions.door_Left_Close.reset().setLoop(THREE.LoopOnce).fadeIn(0.5).play()
      actions.door_Right_Close
        .reset()
        .setLoop(THREE.LoopOnce)
        .fadeIn(0.5)
        .play()
      actions.Door_Left_Clsoe.clampWhenFinished = true
      actions.Door_Right_Clsoe.clampWhenFinished = true
      doorClosed = true
      console.log(doorClosed)
    }
  }

  return (
    <group ref={group} {...props} dispose={null} onClick={openDoor}>
      <group name="Scene">
        <group name="AlfaRomeo33" rotation={[1.57, 0, 0]} scale={0.01}>
          <group
            name="Door_Left"
            position={[9.48, -1.87, -102.29]}
            rotation={[0.24, -0.27, 0.73]}
          >
            <mesh
              name="Body_doors"
              geometry={nodes.Body_doors.geometry}
              material={nodes.Body_doors.material}
              position={[12.25, 7.12, 47.55]}
              rotation={[-1.86, 0.64, 0.46]}
              scale={100}
            />
            <mesh
              name="Glass_doors_01"
              geometry={nodes.Glass_doors_01.geometry}
              material={nodes.Glass_doors_01.material}
              position={[-12.55, -4.47, 14.43]}
              rotation={[-1.86, 0.64, 0.46]}
              scale={100}
            />
          </group>
          <group
            name="Door_Right"
            position={[-9.48, -1.87, -102.29]}
            rotation={[0.25, 0.28, -0.73]}
          >
            <mesh
              name="Body_doors_2"
              geometry={nodes.Body_doors_2.geometry}
              material={nodes.Body_doors_2.material}
              position={[-12.88, 7.12, 47.38]}
              rotation={[-1.87, -0.64, -0.48]}
              scale={100}
            />
            <mesh
              name="Glass_doors_01_2"
              geometry={nodes.Glass_doors_01_2.geometry}
              material={nodes.Glass_doors_01_2.material}
              position={[11.56, -5.18, 14.28]}
              rotation={[-1.87, -0.64, -0.48]}
              scale={100}
            />
          </group>
          <mesh
            name="Car_Body_Still"
            geometry={nodes.Car_Body_Still.geometry}
            material={nodes.Car_Body_Still.material}
            position={[0, 195.78, -24.79]}
          />
        </group>
        <PerspectiveCamera
          name="Cam_Front"
          makeDefault={false}
          far={1000}
          near={0.1}
          fov={17.06}
          position={[2.88, 0.82, 5.76]}
          rotation={[-0.04, 0.5, 0.02]}
        />
      </group>
    </group>
  )
}

useGLTF.preload('./carModel/Door_r3f_02.gltf')
